module org.elysium.GenerateLilyPond

import org.eclipse.xtext.xtext.generator.*
import org.eclipse.xtext.xtext.generator.model.project.*

var rootPath = ".."

Workflow {
	
	component = XtextGenerator {
		configuration = {
			project = StandardProjectConfig {
				baseName = "org.elysium"
				rootPath = rootPath
				runtimeTest = {
					enabled = true
				}
				eclipsePlugin = {
					enabled = true
				}
				eclipsePluginTest = {
					enabled = true
				}
				createEclipseMetaData = true
			}
			code = {
				encoding = "UTF-8"
				fileHeader = "/*\n * generated by Xtext \${version}\n */"
				preferXtendStubs=false
			}
		}
		language = {
			name = "org.elysium.LilyPond"
			fileExtensions = "ly,ily,lyi"

			fragment = grammarAccess.GrammarAccessFragment2 {}

			fragment = ecore.EMFGeneratorFragment2 {}

			fragment = serializer.SerializerFragment2 {}

			fragment = resourceFactory.ResourceFactoryFragment2 {}

			//also generates ide content assist parser
			fragment = parser.antlr.XtextAntlrGeneratorFragment2 {
				antlrParam = "-Xconversiontimeout" 
				antlrParam = "20000"
				options = {
					backtrack = true
				}
			}

			fragment = validation.ValidatorFragment2 {
				composedCheck = "org.eclipse.xtext.validation.NamesAreUniqueValidator"
			}

			fragment = exporting.SimpleNamesFragment2 {}

			fragment = formatting.Formatter2Fragment2 {
				generateXtendStub=true
			}

			fragment = ui.labeling.LabelProviderFragment2 {}

			fragment = ui.outline.OutlineTreeProviderFragment2 {}
			fragment = ui.outline.QuickOutlineFragment2 {}

			fragment = ui.contentAssist.ContentAssistFragment2 {}

			fragment = builder.BuilderIntegrationFragment2 {}

			fragment = ui.quickfix.QuickfixProviderFragment2 {}
			
			fragment = ui.refactoring.RefactorElementNameFragment2 {}
			
			fragment = ui.compare.CompareFragment2 {}

			fragment = junit.JUnitFragment {}
		}
	}
}
